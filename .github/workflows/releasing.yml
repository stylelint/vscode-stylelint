name: Releasing

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check actor permission
        run: |
          actor_permission=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/${GITHUB_REPOSITORY}/collaborators/${GITHUB_ACTOR}/permission" \
            --jq .permission)
          if [[ "${actor_permission}" != "admin" ]]; then
            echo "Only admin users can release a new version."
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests
        run: npm run test:integration

      - name: Run E2E tests
        run: xvfb-run -a npm run test:e2e

      - name: Publish
        run: npm run release
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Create GitHub release
        shell: bash
        run: |
          # Prepare for a new tag.
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"

          # Create and push a Git tag.
          new_version=$(npm pkg get version | tr -d '"')
          new_tag="v${new_version}"
          git tag --annotate "${new_version}" -m "${new_version}" "${new_tag}"
          git push origin "${new_tag}"

          # Create a GitHub release.
          gh release create "${new_tag}" --generate-notes
          release_url=$(gh release view "${latest_tag}" --json url --jq '.url')
          echo "::notice::${release_url} was created successfully. Adjust the release notes from the changelog to keep the consistency with other releases."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
