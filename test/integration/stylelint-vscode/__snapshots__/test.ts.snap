// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StylelintRunner should be resolved with diagnostics when it lints CSS successfully 1`] = `
[
  {
    "code": "color-no-invalid-hex",
    "codeDescription": {
      "href": "https://stylelint.io/user-guide/rules/color-no-invalid-hex",
    },
    "message": "Unexpected invalid hex color "#y3" (color-no-invalid-hex)",
    "range": {
      "end": {
        "character": 18,
        "line": 0,
      },
      "start": {
        "character": 15,
        "line": 0,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
  {
    "code": "selector-type-no-unknown",
    "codeDescription": {
      "href": "https://stylelint.io/user-guide/rules/selector-type-no-unknown",
    },
    "message": "Unexpected unknown type selector "foo" (selector-type-no-unknown)",
    "range": {
      "end": {
        "character": 5,
        "line": 0,
      },
      "start": {
        "character": 2,
        "line": 0,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
]
`;

exports[`StylelintRunner should be resolved with diagnostics when the rules include unknown rules 1`] = `
[
  {
    "code": "this-rule-does-not-exist",
    "message": "Unknown rule this-rule-does-not-exist.",
    "range": {
      "end": {
        "character": 4,
        "line": 0,
      },
      "start": {
        "character": 0,
        "line": 0,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
  {
    "code": "this-rule-also-does-not-exist",
    "message": "Unknown rule this-rule-also-does-not-exist.",
    "range": {
      "end": {
        "character": 4,
        "line": 0,
      },
      "start": {
        "character": 0,
        "line": 0,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
]
`;

exports[`StylelintRunner should be resolved with one diagnostic when the CSS is broken 1`] = `
[
  {
    "code": "CssSyntaxError",
    "message": "Unclosed block (CssSyntaxError)",
    "range": {
      "end": {
        "character": 11,
        "line": 0,
      },
      "start": {
        "character": 10,
        "line": 0,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
]
`;

exports[`StylelintRunner should check CSS syntax even if no configuration is provided 1`] = `
[
  {
    "code": "CssSyntaxError",
    "message": "Unclosed bracket (CssSyntaxError)",
    "range": {
      "end": {
        "character": 13,
        "line": 0,
      },
      "start": {
        "character": 12,
        "line": 0,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
]
`;

exports[`StylelintRunner should check CSS syntax even if no rule is provided 1`] = `
[
  {
    "code": "CssSyntaxError",
    "message": "At-rule without name (CssSyntaxError)",
    "range": {
      "end": {
        "character": 1,
        "line": 0,
      },
      "start": {
        "character": 0,
        "line": 0,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
]
`;

exports[`StylelintRunner should reject with a reason when it takes incorrect options 1`] = `
"Invalid option value "foo" for rule "color-hex-alpha"
Invalid option name "bar" for rule "selector-type-no-unknown""
`;

exports[`StylelintRunner should support CSS-in-JS with customSyntax 1`] = `
[
  {
    "code": "font-weight-notation",
    "codeDescription": {
      "href": "https://stylelint.io/user-guide/rules/font-weight-notation",
    },
    "message": "Expected "bold" to be "700" (font-weight-notation)",
    "range": {
      "end": {
        "character": 33,
        "line": 2,
      },
      "start": {
        "character": 29,
        "line": 2,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
  {
    "code": "font-weight-notation",
    "codeDescription": {
      "href": "https://stylelint.io/user-guide/rules/font-weight-notation",
    },
    "message": "Expected "normal" to be "400" (font-weight-notation)",
    "range": {
      "end": {
        "character": 12,
        "line": 4,
      },
      "start": {
        "character": 6,
        "line": 4,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
]
`;

exports[`StylelintRunner with a configuration file should adhere to configuration file settings 1`] = `
[
  {
    "code": "length-zero-no-unit",
    "codeDescription": {
      "href": "https://stylelint.io/user-guide/rules/length-zero-no-unit",
    },
    "message": "Unexpected unit (length-zero-no-unit)",
    "range": {
      "end": {
        "character": 12,
        "line": 3,
      },
      "start": {
        "character": 10,
        "line": 3,
      },
    },
    "severity": 1,
    "source": "Stylelint",
  },
]
`;

exports[`StylelintRunner with auto-fix auto-fix should work if there are errors that cannot be auto-fixed 1`] = `
{
  "diagnostics": [
    {
      "code": "selector-type-no-unknown",
      "codeDescription": {
        "href": "https://stylelint.io/user-guide/rules/selector-type-no-unknown",
      },
      "message": "Unexpected unknown type selector "unknown" (selector-type-no-unknown)",
      "range": {
        "end": {
          "character": 7,
          "line": 1,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
  ],
  "output": "
unknown {
    color: #fff;
    background-color: #fffa;
}
",
}
`;

exports[`StylelintRunner with auto-fix auto-fix should work if there is syntax errors in css 1`] = `
"
.a {
    color: #ffffff;
    background-color: #ffffffaa
}
"
`;

exports[`StylelintRunner with auto-fix auto-fix should work properly if configs are defined 1`] = `
"a
{
color:#fff;
}"
`;

exports[`StylelintRunner with customSyntax auto-fix should work properly if customSyntax is defined 1`] = `
{
  "diagnostics": [],
  "output": "a
  color:#fff",
}
`;

exports[`StylelintRunner with customSyntax should work properly if customSyntax is defined 1`] = `
{
  "diagnostics": [
    {
      "code": "color-hex-length",
      "codeDescription": {
        "href": "https://stylelint.io/user-guide/rules/color-hex-length",
      },
      "message": "Expected "#ffffff" to be "#fff" (color-hex-length)",
      "range": {
        "end": {
          "character": 15,
          "line": 1,
        },
        "start": {
          "character": 8,
          "line": 1,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
  ],
}
`;

exports[`StylelintRunner with reportDescriptionlessDisables should work properly if reportDescriptionlessDisables is true 1`] = `
{
  "diagnostics": [
    {
      "code": "--report-descriptionless-disables",
      "message": "Disable for "color-no-invalid-hex" is missing a description",
      "range": {
        "end": {
          "character": 57,
          "line": 2,
        },
        "start": {
          "character": 4,
          "line": 2,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
    {
      "code": "--report-descriptionless-disables",
      "message": "Disable for "color-no-invalid-hex" is missing a description",
      "range": {
        "end": {
          "character": 43,
          "line": 5,
        },
        "start": {
          "character": 0,
          "line": 5,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
    {
      "code": "--report-descriptionless-disables",
      "message": "Disable for "color-no-invalid-hex" is missing a description",
      "range": {
        "end": {
          "character": 62,
          "line": 11,
        },
        "start": {
          "character": 14,
          "line": 11,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
  ],
}
`;

exports[`StylelintRunner with reportInvalidScopeDisables should work properly if reportInvalidScopeDisables is true 1`] = `
{
  "diagnostics": [
    {
      "code": "--report-invalid-scope-disables",
      "message": "Rule "foo" isn't enabled",
      "range": {
        "end": {
          "character": 36,
          "line": 1,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
    {
      "code": "--report-invalid-scope-disables",
      "message": "Rule "foo" isn't enabled",
      "range": {
        "end": {
          "character": 31,
          "line": 3,
        },
        "start": {
          "character": 0,
          "line": 3,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
    {
      "code": "--report-invalid-scope-disables",
      "message": "Rule "foo" isn't enabled",
      "range": {
        "end": {
          "character": 26,
          "line": 5,
        },
        "start": {
          "character": 0,
          "line": 5,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
  ],
}
`;

exports[`StylelintRunner with reportNeedlessDisables should work properly if reportNeedlessDisables is true 1`] = `
{
  "diagnostics": [
    {
      "code": "color-no-invalid-hex",
      "codeDescription": {
        "href": "https://stylelint.io/user-guide/rules/color-no-invalid-hex",
      },
      "message": "Unexpected invalid hex color "#y3" (color-no-invalid-hex)",
      "range": {
        "end": {
          "character": 25,
          "line": 2,
        },
        "start": {
          "character": 22,
          "line": 2,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
    {
      "code": "--report-needless-disables",
      "message": "Needless disable for "color-no-invalid-hex"",
      "range": {
        "end": {
          "character": 80,
          "line": 2,
        },
        "start": {
          "character": 27,
          "line": 2,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
    {
      "code": "--report-needless-disables",
      "message": "Needless disable for "color-no-invalid-hex"",
      "range": {
        "end": {
          "character": 43,
          "line": 6,
        },
        "start": {
          "character": 0,
          "line": 6,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
    {
      "code": "--report-needless-disables",
      "message": "Needless disable for "color-no-invalid-hex"",
      "range": {
        "end": {
          "character": 64,
          "line": 13,
        },
        "start": {
          "character": 16,
          "line": 13,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
    {
      "code": "--report-needless-disables",
      "message": "Needless disable for "color-no-invalid-hex"",
      "range": {
        "end": {
          "character": 43,
          "line": 16,
        },
        "start": {
          "character": 0,
          "line": 16,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
  ],
}
`;

exports[`StylelintRunner with stylelintPath should work properly if custom path is defined in stylelintPath 1`] = `
{
  "diagnostics": [
    {
      "code": "fake",
      "message": "Fake result",
      "range": {
        "end": {
          "character": 1,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
  ],
}
`;

exports[`StylelintRunner with stylelintPath should work properly if stylelintPath is defined 1`] = `
{
  "diagnostics": [
    {
      "code": "color-no-invalid-hex",
      "codeDescription": {
        "href": "https://stylelint.io/user-guide/rules/color-no-invalid-hex",
      },
      "message": "Unexpected invalid hex color "#y3" (color-no-invalid-hex)",
      "range": {
        "end": {
          "character": 11,
          "line": 1,
        },
        "start": {
          "character": 8,
          "line": 1,
        },
      },
      "severity": 1,
      "source": "Stylelint",
    },
  ],
}
`;
