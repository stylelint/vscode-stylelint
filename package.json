{
  "name": "vscode-stylelint",
  "version": "1.3.0",
  "license": "MIT",
  "description": "Official Stylelint extension for Visual Studio Code",
  "main": "dist/index.js",
  "displayName": "Stylelint",
  "publisher": "stylelint",
  "repository": {
    "type": "git",
    "url": "https://github.com/stylelint/vscode-stylelint.git"
  },
  "homepage": "https://github.com/stylelint/vscode-stylelint#readme",
  "bugs": "https://github.com/stylelint/vscode-stylelint/issues",
  "qna": "https://stackoverflow.com/questions/tagged/vscode+stylelint",
  "sponsor": {
    "url": "https://opencollective.com/stylelint"
  },
  "icon": "media/stylelint.png",
  "engines": {
    "vscode": ">=1.82.3",
    "node": ">=18.15.0"
  },
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "categories": [
    "Linters",
    "Snippets",
    "Programming Languages"
  ],
  "keywords": [
    "css",
    "less",
    "sass",
    "scss",
    "sugarss",
    "lint",
    "linter",
    "style",
    "stylelint",
    "validation",
    "check"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Stylelint",
      "properties": {
        "stylelint.enable": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Control whether Stylelint is enabled or not."
        },
        "stylelint.codeAction.disableRuleComment": {
          "scope": "resource",
          "type": "object",
          "default": {
            "location": "separateLine"
          },
          "properties": {
            "location": {
              "type": "string",
              "enum": [
                "separateLine",
                "sameLine"
              ],
              "default": "separateLine",
              "description": "Configure whether disable comments are added on the same line or a new line."
            }
          },
          "additionalProperties": false,
          "description": "Options for the disable lint rule action in the quick fix menu."
        },
        "stylelint.config": {
          "scope": "resource",
          "type": [
            "object",
            "null"
          ],
          "default": null,
          "description": "A Stylelint configuration object."
        },
        "stylelint.configFile": {
          "scope": "resource",
          "type": "string",
          "default": "",
          "description": "Path to a JSON, YAML, or JS file that contains your configuration object. Use this option if you don't want Stylelint to search for a configuration file."
        },
        "stylelint.configBasedir": {
          "scope": "resource",
          "type": "string",
          "default": "",
          "description": "A path to the directory that relative paths defining \"extends\" and \"plugins\" are relative to."
        },
        "stylelint.customSyntax": {
          "scope": "resource",
          "type": "string",
          "default": "",
          "description": "An absolute path to a custom PostCSS-compatible syntax module."
        },
        "stylelint.reportDescriptionlessDisables": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Report `stylelint-disable` comments without a description."
        },
        "stylelint.ignoreDisables": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Ignore `stylelint-disable` (e.g. `/* stylelint-disable block-no-empty */`) comments."
        },
        "stylelint.reportNeedlessDisables": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Also report errors for `stylelint-disable` comments that are not blocking a lint warning."
        },
        "stylelint.reportInvalidScopeDisables": {
          "scope": "resource",
          "type": "boolean",
          "default": false,
          "description": "Also report errors for `stylelint-disable` comments that used for rules that don't exist within the configuration object."
        },
        "stylelint.stylelintPath": {
          "scope": "resource",
          "type": "string",
          "default": "",
          "description": "Supply a custom path to the Stylelint module."
        },
        "stylelint.packageManager": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "npm",
            "yarn",
            "pnpm"
          ],
          "default": "npm",
          "description": "The package manager you use to install node modules."
        },
        "stylelint.validate": {
          "scope": "resource",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "css",
            "postcss"
          ],
          "description": "An array of language ids which should be validated by Stylelint."
        },
        "stylelint.snippet": {
          "scope": "resource",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "css",
            "postcss"
          ],
          "description": "An array of language ids which snippets are provided by Stylelint."
        }
      }
    },
    "commands": [
      {
        "title": "Fix all auto-fixable Problems",
        "category": "Stylelint",
        "command": "stylelint.executeAutofix"
      },
      {
        "title": "Restart Stylelint Server",
        "category": "Stylelint",
        "command": "stylelint.restart"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "**/.stylelintrc*",
        "url": "https://json.schemastore.org/stylelintrc.json"
      }
    ],
    "languages": [
      {
        "id": "ignore",
        "filenames": [
          ".stylelintignore"
        ]
      }
    ]
  },
  "dependencies": {
    "@types/triple-beam": "^1.3.5",
    "fast-diff": "^1.2.0",
    "path-is-inside": "^1.0.2",
    "rfdc": "^1.3.1",
    "semver": "^7.6.0",
    "serialize-error": "^8.1.0",
    "triple-beam": "^1.4.1",
    "vscode-languageclient": "^9.0.1",
    "vscode-languageserver": "^9.0.1",
    "vscode-languageserver-protocol": "^3.17.5",
    "vscode-languageserver-textdocument": "^1.0.11",
    "vscode-languageserver-types": "^3.17.5",
    "vscode-uri": "^3.0.8",
    "winston": "^3.12.0",
    "winston-transport": "^4.7.0"
  },
  "devDependencies": {
    "@stylelint/postcss-css-in-js": "^0.38.0",
    "@stylelint/prettier-config": "^3.0.0",
    "@types/jest": "^29.5.14",
    "@types/path-is-inside": "^1.0.0",
    "@types/semver": "^7.5.8",
    "@types/vscode": "1.82.0",
    "@typescript-eslint/eslint-plugin": "^7.3.1",
    "@typescript-eslint/parser": "^7.3.1",
    "@typescript/lib-dom": "npm:@types/web@^0.0.47",
    "@vscode/test-electron": "^1.6.2",
    "cspell": "^8.6.0",
    "esbuild": "^0.20.2",
    "eslint": "^8.57.0",
    "eslint-config-stylelint": "^21.0.0",
    "eslint-plugin-jest": "^27.9.0",
    "fast-glob": "^3.2.7",
    "jest": "^29.7.0",
    "jest-runner-vscode": "^3.0.1",
    "npm-run-all": "^4.1.5",
    "p-wait-for": "^3.1.0",
    "postcss": "^8.4.31",
    "postcss-sass": "^0.5.0",
    "postcss-scss": "^4.0.9",
    "prettier": "^3.4.2",
    "stylelint": "^16.15.0",
    "stylelint-processor-glamorous": "^0.3.0",
    "stylelint-processor-styled-components": "^1.10.0",
    "stylelint-scss": "^6.2.1",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.4.0",
    "typed-emitter": "^2.1.0",
    "typescript": "^4.9.5"
  },
  "scripts": {
    "build": "tsc -p tsconfig.src.json",
    "build-bundle-watch": "run:p build-watch bundle-watch",
    "build-watch": "npm run build -- --watch",
    "bundle": "npm run bundle-base -- --sourcemap",
    "bundle-base": "ts-node --transpile-only -P tsconfig.scripts.json scripts/bundle.ts",
    "bundle-watch": "npm run bundle-base -- --sourcemap --watch",
    "build-bundle": "run-s build bundle",
    "download-vscode": "ts-node --transpile-only -P tsconfig.scripts.json scripts/download-vscode.ts",
    "format": "prettier . --write",
    "lint": "run-s \"lint:*\"",
    "lint:formatting": "prettier . --check",
    "lint:js": "eslint .",
    "lint:spelling": "cspell lint --no-progress",
    "lint:types": "tsc -b",
    "lint:unit-tests": "ts-node --transpile-only -P tsconfig.scripts.json scripts/enforce-unit-tests-per-file.ts",
    "test": "npm run build-bundle && npm run jest",
    "test:e2e": "npm run build-bundle && npm run jest -- --projects test/e2e",
    "test:integration": "npm run jest -- --projects test/integration",
    "test:unit": "npm run jest -- --projects test/unit",
    "jest": "node --experimental-vm-modules node_modules/jest/bin/jest.js",
    "vscode:prepublish": "npm run build && npm run bundle-base -- --minify"
  },
  "prettier": "@stylelint/prettier-config",
  "volta": {
    "node": "22.13.1",
    "npm": "11.0.0"
  }
}
